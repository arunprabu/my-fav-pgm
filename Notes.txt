Components
Data Binding
Directives 
  'plugins'
  will impact the dom 
  statements written for DOM 
  1) Attribute Directives  (built-in)
    <p title="arun" [ngClass]="{ 'red': !isLoggedIn() }" [ngStyle]="">test</p>
  2) Structural Directives  (built-in)
      make impact in structure/view 
      *ngIf, *ngFor, ngSwitch
  3) Custom Attribute Directives 
Routing
  - helps us build SPA 
  - stops page reload and updates the main section 
Template Pages
Forms 
  1. Template Driven Forms 
      - Built using html 
      Adv 
        1. Easy to implement 
        2. Quick to implement 
      Disadv 
        1. Challenging to do some validations 
  2. Reactive Forms 
      - Built using Ts / Angular form related API's 
      Adv 
        1. Good if you are doing complex validations 
        2. You will have more control over the form field 
      Disadv
        1. LEarning curve is large 
        2. Challenging to implement 
Services
  - ng g s program 
  - Intermediate layer b/w comp and rest api 
  - Responsible for connecting to rest api end point
  - get the data from comp 
  - send the data to rest api 
  - receive resp from rest api 
  - send the resp back to comp 
Http in Angular vs HttpClient
  Http Works with pipes, maps
  HttpClient doesnt need pipes, maps  
Dependency Injection
RxJS and Observables
  What's Observable?
        It's a collection that returned over time. 
        It's a push, that sends multiple values
        Observable is like restaurant kitchen.
        If you subscribe to observable, it decides when to give information 
    Now, What's RxJs?
        Various method of operators, you can chain on Observables to filter data, sort, pipe, map
    Refer: http://jsbin.com/kuzifehivi/4/edit?html,js,console
Other Decorators and @Injectable
Interface
Class
Pipes   - will transform info from one format to another   ( timestamp => human readable time)
Guards  - like a security guard for the route 
using Modules 
Unit Testing

...
...



PRoject structure 
  src/  
    app/
      components/
        shared/
        programs/
        contact/
        concepts/
        about/
      services/
        program 